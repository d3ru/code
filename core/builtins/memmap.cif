# memmap.cif
# 
# Copyright (c) 2011 Accenture. All rights reserved.
# This component and the accompanying materials are made available
# under the terms of the "Eclipse Public License v1.0"
# which accompanies this distribution, and is available
# at the URL "http://www.eclipse.org/legal/epl-v10.html".
# 
# Initial Contributors:
# Accenture - Initial contribution
#

==name memmap

==short-description

Display a breakdown of the address space for a given process.

==long-description

Shows all the chunks and code segments mapped into the process, and the locations of thread stacks. If no arguments or C<--match> options are supplied, display a breakdown of the shared address space - that is, things that are mapped into the same location in all processes (such as the ROM, code segments, kernel data etc).

Currently the following areas are shown, for processes:

=over 5

=item *

Code segments mapped into that process.

=item *

Chunks that the process has a handle to.

=item *

User stacks for threads in that process.

=back

For the shared address space:

=over 5

=item *

All code segments currently loaded.

=item *

Any chunks with fixed base addresses.

=item *

Location of Unpaged and Paged ROM area.

=item *

Supervisor mode stacks for all threads.

=back

==argument uint process_id optional

Show the address space for the process with the given ID.

==option string m match

Show the address spaces for processes matching the given pattern.

==option bool s size

Display chunk/codeseg/stack sizes.

==option bool H human

Show sizes in human-readable format. Implies C<--size>.

==copyright

Copyright (c) 2011 Accenture. All rights reserved.

==smoke-test

memmap
memmap 123412341 $Silent && $Error
memmap -m fshell* $Quiet
