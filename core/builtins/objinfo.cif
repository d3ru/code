# objinfo.cif
# 
# Copyright (c) 2010 - 2011 Accenture. All rights reserved.
# This component and the accompanying materials are made available
# under the terms of the "Eclipse Public License v1.0"
# which accompanies this distribution, and is available
# at the URL "http://www.eclipse.org/legal/epl-v10.html".
# 
# Initial Contributors:
# Accenture - Initial contribution
#

==name objinfo

==short-description

Display information about kernel objects.

==long-description

Given a kernel object address, prints details of the threads and processes that are currently holding handles to it (note, kernel objects addresses can be found using L<ps|ps> (e.g. C<ps -A> or C<ps -At>), L<chunkinfo|chunkinfo> or L<svrinfo|svrinfo>). Given a thread or process identifier, lists details of all the owned objects. The C<--match> option can be used to specify a process or thread by name instead of by ID.

To see all the threads and processes that have a handle open to the DObject 0x12345678:

    objinfo 0x12345678

For example, to see all the handles opened by process 23:

    objinfo --process-id 23 --all

==see-also

L<ps|ps>, L<chunkinfo|chunkinfo>, L<svrinfo|svrinfo>

==argument uint object_address optional

The address of the kernel object to find the owners of. If not specified, one of C<--thread-id>, C<--process-id> or C<--match> must be given.

==option string m match

Show all the handles opened by the thread or process(es) that match the given string. Wildcards '*' and '?' may be used. Implies C<--all>.

==option bool r referencers

Print the names of threads and processes that are holding handles to a given object.

==option uint p process-id

List all the objects that the specified process references.

==option uint t thread-id

List all the objects that the specified thread references.

==option bool a all

Include details of objects referenced by threads of a given process, ie show the thread-local handles held by threads in that process as well as the process-global handles. Only useful in conjunction with the C<--process-id> option.

==smoke-test

objinfo
objinfo 1234 $Silent || $Error # This should spit out a warning but should not exit abnormally

# Depending on whether CIF cacheing has avoided the need to open objinfo's RFs handle, there will be either 1 or 2 sessions opened. The second session is to iosrv, presumably.
objinfo --match *objinfo_00 | match --count *ESession* | export -s RESULT
var RESULT == 2 || var RESULT == 1 || $Error

==copyright

Copyright (c) 2006-2010 Accenture. All rights reserved.

