EXPORTS
	??0TBtraceThreadId@@QAE@I@Z @ 1 NONAME ; TBtraceThreadId::TBtraceThreadId(unsigned int)
	?NotifyPointerEventL@CBtraceKeyPress@@QAEXAAVMBtraceKeyPressObserver@@W4TBtraceNotificationPersistence@@@Z @ 2 NONAME ; void CBtraceKeyPress::NotifyPointerEventL(class MBtraceKeyPressObserver &, enum TBtraceNotificationPersistence)
	?NotifyDomainEventL@CBtraceDomainEvent@@QAEXIIIIAAVMBtraceDomainEventObserver@@W4TBtraceNotificationPersistence@@@Z @ 3 NONAME ; void CBtraceDomainEvent::NotifyDomainEventL(unsigned int, unsigned int, unsigned int, unsigned int, class MBtraceDomainEventObserver &, enum TBtraceNotificationPersistence)
	?FindThread@CBtraceContext@@QBEPBVTBtraceThreadId@@K@Z @ 4 NONAME ; class TBtraceThreadId const * CBtraceContext::FindThread(unsigned long) const
	?NotifyRawKeyEventL@CBtraceKeyPress@@QAEXAAVMBtraceKeyPressObserver@@W4TBtraceNotificationPersistence@@@Z @ 5 NONAME ; void CBtraceKeyPress::NotifyRawKeyEventL(class MBtraceKeyPressObserver &, enum TBtraceNotificationPersistence)
	?NotifyScreenUpdateL@CBtraceScreenUpdate@@QAEXHABVTRect@@AAVMBtraceScreenUpdateObserver@@W4TBtraceNotificationPersistence@@@Z @ 6 NONAME ; void CBtraceScreenUpdate::NotifyScreenUpdateL(int, class TRect const &, class MBtraceScreenUpdateObserver &, enum TBtraceNotificationPersistence)
	?Start@CBtraceReader@@QAEXABVTBtraceTickCount@@@Z @ 7 NONAME ; void CBtraceReader::Start(class TBtraceTickCount const &)
	?NewL@CBtracePubSub@@SAPAV1@AAVCBtraceReader@@@Z @ 8 NONAME ; class CBtracePubSub * CBtracePubSub::NewL(class CBtraceReader &)
	??1CBtraceContext@@UAE@XZ @ 9 NONAME ; CBtraceContext::~CBtraceContext(void)
	?NewL@CBtraceContext@@SAPAV1@AAVCBtraceReader@@W4TMode@1@@Z @ 10 NONAME ; class CBtraceContext * CBtraceContext::NewL(class CBtraceReader &, enum CBtraceContext::TMode)
	??0TBtraceThreadId@@QAE@XZ @ 11 NONAME ; TBtraceThreadId::TBtraceThreadId(void)
	?SynchronizeL@CBtraceReader@@QAEXXZ @ 12 NONAME ; void CBtraceReader::SynchronizeL(void)
	?SetToNow@TBtraceTickCount@@QAEXXZ @ 13 NONAME ; void TBtraceTickCount::SetToNow(void)
	?NotifyThreadExitL@CBtraceContext@@QAEXABVTDesC16@@IPAHPBV2@AAVMBtraceContextObserver@@IW4TBtraceNotificationPersistence@@@Z @ 14 NONAME ; void CBtraceContext::NotifyThreadExitL(class TDesC16 const &, unsigned int, int *, class TDesC16 const *, class MBtraceContextObserver &, unsigned int, enum TBtraceNotificationPersistence)
	?Value@TBtraceIdBase@@QBEIXZ @ 15 NONAME ; unsigned int TBtraceIdBase::Value(void) const
	?NotifyThreadGoneL@CBtraceContext@@QAEXABVTDesC16@@AAVMBtraceContextObserver@@I@Z @ 16 NONAME ; void CBtraceContext::NotifyThreadGoneL(class TDesC16 const &, class MBtraceContextObserver &, unsigned int)
	?NotifyKeyEventL@CBtraceKeyPress@@QAEXAAVMBtraceKeyPressObserver@@@Z @ 17 NONAME ; void CBtraceKeyPress::NotifyKeyEventL(class MBtraceKeyPressObserver &)
	?CancelNotifyPointerEvent@CBtraceKeyPress@@QAEXAAVMBtraceKeyPressObserver@@@Z @ 18 NONAME ; void CBtraceKeyPress::CancelNotifyPointerEvent(class MBtraceKeyPressObserver &)
	??9TBtraceTickCount@@QBEHABV0@@Z @ 19 NONAME ; int TBtraceTickCount::operator!=(class TBtraceTickCount const &) const
	?NotifyRawKeyEventL@CBtraceKeyPress@@QAEXAAVMBtraceKeyPressObserver@@@Z @ 20 NONAME ; void CBtraceKeyPress::NotifyRawKeyEventL(class MBtraceKeyPressObserver &)
	?NotifyPropertyChangedL@CBtracePubSub@@QAEXAAVMBtracePubSubObserver@@@Z @ 21 NONAME ; void CBtracePubSub::NotifyPropertyChangedL(class MBtracePubSubObserver &)
	?DebugOverrideTimerSettings@TBtraceUtils@@SAXHHH@Z @ 22 NONAME ; void TBtraceUtils::DebugOverrideTimerSettings(int, int, int)
	??8TBtraceTickCount@@QBEHABV0@@Z @ 23 NONAME ; int TBtraceTickCount::operator==(class TBtraceTickCount const &) const
	?NotifyDomainEventL@CBtraceDomainEvent@@QAEXIIAAVMBtraceDomainEventObserver@@W4TBtraceNotificationPersistence@@@Z @ 24 NONAME ; void CBtraceDomainEvent::NotifyDomainEventL(unsigned int, unsigned int, class MBtraceDomainEventObserver &, enum TBtraceNotificationPersistence)
	?FindThread@CBtraceContext@@QBEPBVTBtraceThreadId@@ABVTThreadId@@@Z @ 25 NONAME ; class TBtraceThreadId const * CBtraceContext::FindThread(class TThreadId const &) const
	??0TBtraceIdBase@@IAE@XZ @ 26 NONAME ; TBtraceIdBase::TBtraceIdBase(void)
	??1CBtraceDomainEvent@@UAE@XZ @ 27 NONAME ; CBtraceDomainEvent::~CBtraceDomainEvent(void)
	?NewL@CBtraceGeneric@@SAPAV1@AAVCBtraceReader@@@Z @ 28 NONAME ; class CBtraceGeneric * CBtraceGeneric::NewL(class CBtraceReader &)
	?NewL@CBtraceAppResponse@@SAPAV1@AAVCBtraceReader@@AAVCBtraceContext@@@Z @ 29 NONAME ; class CBtraceAppResponse * CBtraceAppResponse::NewL(class CBtraceReader &, class CBtraceContext &)
	?FlushL@CBtraceReader@@QAEXXZ @ 30 NONAME ; void CBtraceReader::FlushL(void)
	?FindThreadsL@CBtraceContext@@QBEXABVTDesC16@@AAV?$RArray@VTBtraceThreadId@@@@@Z @ 31 NONAME ; void CBtraceContext::FindThreadsL(class TDesC16 const &, class RArray<class TBtraceThreadId> &) const
	??1CBtraceTextOnScreen@@UAE@XZ @ 32 NONAME ; CBtraceTextOnScreen::~CBtraceTextOnScreen(void)
	?NotifyTextOnScreenL@CBtraceTextOnScreen@@QAEXABVTDesC16@@AAVMBtraceTextOnScreenObserver@@@Z @ 33 NONAME ; void CBtraceTextOnScreen::NotifyTextOnScreenL(class TDesC16 const &, class MBtraceTextOnScreenObserver &)
	?CancelNotifyAppResponse@CBtraceAppResponse@@QAEXAAVMBtraceAppResponseObserver@@@Z @ 34 NONAME ; void CBtraceAppResponse::CancelNotifyAppResponse(class MBtraceAppResponseObserver &)
	?AddObserverL@CBtraceReader@@QAEXIAAVMBtraceObserver@@W4TObserverType@1@@Z @ 35 NONAME ; void CBtraceReader::AddObserverL(unsigned int, class MBtraceObserver &, enum CBtraceReader::TObserverType)
	?SetBufferSizeL@CBtraceReader@@QAEXH@Z @ 36 NONAME ; void CBtraceReader::SetBufferSizeL(int)
	?CancelNotifyThreadGone@CBtraceContext@@QAEXAAVMBtraceContextObserver@@@Z @ 37 NONAME ; void CBtraceContext::CancelNotifyThreadGone(class MBtraceContextObserver &)
	?SetReplayFileNameL@CBtraceReader@@QAEXABVTDesC16@@@Z @ 38 NONAME ; void CBtraceReader::SetReplayFileNameL(class TDesC16 const &)
	?RemoveObserver@CBtraceReader@@QAEXAAVMBtraceObserver@@@Z @ 39 NONAME ; void CBtraceReader::RemoveObserver(class MBtraceObserver &)
	?NotifyUnclassifiedDataL@CBtraceKeyPress@@QAEXAAVMBtraceKeyPressObserver@@W4TBtraceNotificationPersistence@@@Z @ 40 NONAME ; void CBtraceKeyPress::NotifyUnclassifiedDataL(class MBtraceKeyPressObserver &, enum TBtraceNotificationPersistence)
	?NotifyTextOnScreenL@CBtraceTextOnScreen@@QAEXABVTDesC16@@HW4TMatchMode@1@AAVMBtraceTextOnScreenObserver@@W4TBtraceNotificationPersistence@@@Z @ 41 NONAME ; void CBtraceTextOnScreen::NotifyTextOnScreenL(class TDesC16 const &, int, enum CBtraceTextOnScreen::TMatchMode, class MBtraceTextOnScreenObserver &, enum TBtraceNotificationPersistence)
	??OTBtraceTickCount@@QBEHABV0@@Z @ 42 NONAME ; int TBtraceTickCount::operator>(class TBtraceTickCount const &) const
	?AddObserverL@CBtraceReader@@QAEXAAVMBtraceObserver@@W4TObserverType@1@@Z @ 43 NONAME ; void CBtraceReader::AddObserverL(class MBtraceObserver &, enum CBtraceReader::TObserverType)
	??0TBtraceProcessId@@QAE@I@Z @ 44 NONAME ; TBtraceProcessId::TBtraceProcessId(unsigned int)
	??1CBtraceGeneric@@UAE@XZ @ 45 NONAME ; CBtraceGeneric::~CBtraceGeneric(void)
	?HandleThreadSeenL@MBtraceContextObserver@@UAEXABVTBtraceTickCount@@ABVTBtraceThreadId@@I@Z @ 46 NONAME ; void MBtraceContextObserver::HandleThreadSeenL(class TBtraceTickCount const &, class TBtraceThreadId const &, unsigned int)
	?NotifyKeyEventL@CBtraceKeyPress@@QAEXAAVMBtraceKeyPressObserver@@W4TBtraceNotificationPersistence@@@Z @ 47 NONAME ; void CBtraceKeyPress::NotifyKeyEventL(class MBtraceKeyPressObserver &, enum TBtraceNotificationPersistence)
	?NewL@CBtraceReader@@SAPAV1@W4TMode@1@HHPAVMBtraceLog@@@Z @ 48 NONAME ; class CBtraceReader * CBtraceReader::NewL(enum CBtraceReader::TMode, int, int, class MBtraceLog *)
	?FastTicksToMicroSeconds@TBtraceUtils@@SA?AVTTimeIntervalMicroSeconds@@AB_K@Z @ 49 NONAME ; class TTimeIntervalMicroSeconds TBtraceUtils::FastTicksToMicroSeconds(unsigned long long const &)
	?CancelNotifyDomainEvent@CBtraceDomainEvent@@QAEXAAVMBtraceDomainEventObserver@@@Z @ 50 NONAME ; void CBtraceDomainEvent::CancelNotifyDomainEvent(class MBtraceDomainEventObserver &)
	?CancelNotifyThreadExit@CBtraceContext@@QAEXAAVMBtraceContextObserver@@@Z @ 51 NONAME ; void CBtraceContext::CancelNotifyThreadExit(class MBtraceContextObserver &)
	??1CBtraceCpuUsage@@UAE@XZ @ 52 NONAME ; CBtraceCpuUsage::~CBtraceCpuUsage(void)
	?NotifyTextOnScreenL@CBtraceTextOnScreen@@QAEXABVTDesC16@@AAVMBtraceTextOnScreenObserver@@W4TBtraceNotificationPersistence@@@Z @ 53 NONAME ; void CBtraceTextOnScreen::NotifyTextOnScreenL(class TDesC16 const &, class MBtraceTextOnScreenObserver &, enum TBtraceNotificationPersistence)
	?CancelNotifyWindowGroupSeen@CBtraceContext@@QAEXAAVMBtraceContextObserver@@@Z @ 54 NONAME ; void CBtraceContext::CancelNotifyWindowGroupSeen(class MBtraceContextObserver &)
	?IntervalInFastTicks@TBtraceTickCount@@QBE_KABV1@@Z @ 55 NONAME ; unsigned long long TBtraceTickCount::IntervalInFastTicks(class TBtraceTickCount const &) const
	?CancelNotifyFocusChanged@CBtraceFocusChange@@QAEXAAVMBtraceFocusChangeObserver@@@Z @ 56 NONAME ; void CBtraceFocusChange::CancelNotifyFocusChanged(class MBtraceFocusChangeObserver &)
	?IncRef@CRefCountedObject@@QAEXXZ @ 57 NONAME ; void CRefCountedObject::IncRef(void)
	?LogBtraceStatus@CBtraceReader@@QAEXXZ @ 58 NONAME ; void CBtraceReader::LogBtraceStatus(void)
	?RemoveObserver@CBtraceReader@@QAEXIAAVMBtraceObserver@@@Z @ 59 NONAME ; void CBtraceReader::RemoveObserver(unsigned int, class MBtraceObserver &)
	?NotifyTextOnScreenL@CBtraceTextOnScreen@@QAEXABVTDesC16@@W4TMatchMode@1@AAVMBtraceTextOnScreenObserver@@W4TBtraceNotificationPersistence@@@Z @ 60 NONAME ; void CBtraceTextOnScreen::NotifyTextOnScreenL(class TDesC16 const &, enum CBtraceTextOnScreen::TMatchMode, class MBtraceTextOnScreenObserver &, enum TBtraceNotificationPersistence)
	??1CBtraceScreenUpdate@@UAE@XZ @ 61 NONAME ; CBtraceScreenUpdate::~CBtraceScreenUpdate(void)
	?HandleThreadExitL@MBtraceContextObserver@@UAEXABVTBtraceTickCount@@ABVTBtraceThreadId@@W4TExitType@@HABVTDesC16@@I@Z @ 62 NONAME ; void MBtraceContextObserver::HandleThreadExitL(class TBtraceTickCount const &, class TBtraceThreadId const &, enum TExitType, int, class TDesC16 const &, unsigned int)
	?CancelNotifyTextOnScreen@CBtraceTextOnScreen@@QAEXAAVMBtraceTextOnScreenObserver@@@Z @ 63 NONAME ; void CBtraceTextOnScreen::CancelNotifyTextOnScreen(class MBtraceTextOnScreenObserver &)
	?WindowGroupId@CBtraceContext@@QBEHABVTBtraceWindowGroupId@@@Z @ 64 NONAME ; int CBtraceContext::WindowGroupId(class TBtraceWindowGroupId const &) const
	?NotifyTextOnScreenL@CBtraceTextOnScreen@@QAEXABVTDesC16@@HW4TMatchMode@1@AAVMBtraceTextOnScreenObserver@@@Z @ 65 NONAME ; void CBtraceTextOnScreen::NotifyTextOnScreenL(class TDesC16 const &, int, enum CBtraceTextOnScreen::TMatchMode, class MBtraceTextOnScreenObserver &)
	?FindWindowGroupsByThreadName@CBtraceContext@@QBEXABVTDesC16@@AAV?$RArray@VTBtraceWindowGroupId@@@@@Z @ 66 NONAME ; void CBtraceContext::FindWindowGroupsByThreadName(class TDesC16 const &, class RArray<class TBtraceWindowGroupId> &) const
	?NotifyWindowGroupSeenL@CBtraceContext@@QAEXABVTDesC16@@AAVMBtraceContextObserver@@IW4TBtraceNotificationPersistence@@@Z @ 67 NONAME ; void CBtraceContext::NotifyWindowGroupSeenL(class TDesC16 const &, class MBtraceContextObserver &, unsigned int, enum TBtraceNotificationPersistence)
	?NotifyScreenUpdateL@CBtraceScreenUpdate@@QAEXAAVMBtraceScreenUpdateObserver@@@Z @ 68 NONAME ; void CBtraceScreenUpdate::NotifyScreenUpdateL(class MBtraceScreenUpdateObserver &)
	??0TBtraceIdBase@@IAE@ABV0@@Z @ 69 NONAME ; TBtraceIdBase::TBtraceIdBase(class TBtraceIdBase const &)
	?NewL@CBtraceScreenUpdate@@SAPAV1@AAVCBtraceReader@@@Z @ 70 NONAME ; class CBtraceScreenUpdate * CBtraceScreenUpdate::NewL(class CBtraceReader &)
	??0TBtraceWindowGroupId@@QAE@I@Z @ 71 NONAME ; TBtraceWindowGroupId::TBtraceWindowGroupId(unsigned int)
	?GetReplayStartTickCountL@CBtraceReader@@QAEXAAVTBtraceTickCount@@@Z @ 72 NONAME ; void CBtraceReader::GetReplayStartTickCountL(class TBtraceTickCount &)
	?CancelNotifyKeyEvent@CBtraceKeyPress@@QAEXAAVMBtraceKeyPressObserver@@@Z @ 73 NONAME ; void CBtraceKeyPress::CancelNotifyKeyEvent(class MBtraceKeyPressObserver &)
	?FindWindowGroup@CBtraceContext@@QBEPBVTBtraceWindowGroupId@@H@Z @ 74 NONAME ; class TBtraceWindowGroupId const * CBtraceContext::FindWindowGroup(int) const
	?NotifyScreenUpdateL@CBtraceScreenUpdate@@QAEXAAVMBtraceScreenUpdateObserver@@W4TBtraceNotificationPersistence@@@Z @ 75 NONAME ; void CBtraceScreenUpdate::NotifyScreenUpdateL(class MBtraceScreenUpdateObserver &, enum TBtraceNotificationPersistence)
	?MicroSecondsToFastTicks@TBtraceUtils@@SA_KVTTimeIntervalMicroSeconds32@@@Z @ 76 NONAME ; unsigned long long TBtraceUtils::MicroSecondsToFastTicks(class TTimeIntervalMicroSeconds32)
	??1CBtraceFocusChange@@UAE@XZ @ 77 NONAME ; CBtraceFocusChange::~CBtraceFocusChange(void)
	?NotifyFocusChangedL@CBtraceFocusChange@@QAEXABVTDesC16@@AAVMBtraceFocusChangeObserver@@W4TBtraceNotificationPersistence@@@Z @ 78 NONAME ; void CBtraceFocusChange::NotifyFocusChangedL(class TDesC16 const &, class MBtraceFocusChangeObserver &, enum TBtraceNotificationPersistence)
	?NotifyThreadIdleL@CBtraceCpuUsage@@QAEXABVTBtraceThreadId@@ABVTBtraceTickCount@@VTTimeIntervalMicroSeconds32@@AAVMBtraceCpuUsageObserver@@@Z @ 79 NONAME ; void CBtraceCpuUsage::NotifyThreadIdleL(class TBtraceThreadId const &, class TBtraceTickCount const &, class TTimeIntervalMicroSeconds32, class MBtraceCpuUsageObserver &)
	?RecordBtraceDataToFileL@CBtraceReader@@QAEXABVTDesC16@@@Z @ 80 NONAME ; void CBtraceReader::RecordBtraceDataToFileL(class TDesC16 const &)
	?RemoveFrameObserver@CBtraceReader@@QAEXAAVMBtraceFrameObserver@@@Z @ 81 NONAME ; void CBtraceReader::RemoveFrameObserver(class MBtraceFrameObserver &)
	??0TBtraceProcessId@@QAE@ABV0@@Z @ 82 NONAME ; TBtraceProcessId::TBtraceProcessId(class TBtraceProcessId const &)
	??1CBtracePubSub@@UAE@XZ @ 83 NONAME ; CBtracePubSub::~CBtracePubSub(void)
	?NotifyIntegerPropertyChangedL@CBtracePubSub@@QAEXPAI0PAHAAVMBtracePubSubObserver@@W4TBtraceNotificationPersistence@@@Z @ 84 NONAME ; void CBtracePubSub::NotifyIntegerPropertyChangedL(unsigned int *, unsigned int *, int *, class MBtracePubSubObserver &, enum TBtraceNotificationPersistence)
	?AddObserverL@CBtraceReader@@QAEXIAAVMBtraceObserver@@@Z @ 85 NONAME ; void CBtraceReader::AddObserverL(unsigned int, class MBtraceObserver &)
	?NotifyDataPropertyChangedL@CBtracePubSub@@QAEXPAI0PBVTDesC8@@AAVMBtracePubSubObserver@@W4TBtraceNotificationPersistence@@@Z @ 86 NONAME ; void CBtracePubSub::NotifyDataPropertyChangedL(unsigned int *, unsigned int *, class TDesC8 const *, class MBtracePubSubObserver &, enum TBtraceNotificationPersistence)
	?NanoTicksToMicroSeconds@TBtraceUtils@@SA?AVTTimeIntervalMicroSeconds@@K@Z @ 87 NONAME ; class TTimeIntervalMicroSeconds TBtraceUtils::NanoTicksToMicroSeconds(unsigned long)
	?NotifyThreadGoneL@CBtraceContext@@QAEXABVTDesC16@@AAVMBtraceContextObserver@@IW4TBtraceNotificationPersistence@@@Z @ 88 NONAME ; void CBtraceContext::NotifyThreadGoneL(class TDesC16 const &, class MBtraceContextObserver &, unsigned int, enum TBtraceNotificationPersistence)
	?CancelNotifyPropertyChanged@CBtracePubSub@@QAEXAAVMBtracePubSubObserver@@@Z @ 89 NONAME ; void CBtracePubSub::CancelNotifyPropertyChanged(class MBtracePubSubObserver &)
	?NewL@CBtraceDomainEvent@@SAPAV1@AAVCBtraceReader@@@Z @ 90 NONAME ; class CBtraceDomainEvent * CBtraceDomainEvent::NewL(class CBtraceReader &)
	?AddFrameObseverL@CBtraceReader@@QAEXAAVMBtraceFrameObserver@@@Z @ 91 NONAME ; void CBtraceReader::AddFrameObseverL(class MBtraceFrameObserver &)
	?IntervalInMicroSeconds@TBtraceTickCount@@QBE?AVTTimeIntervalMicroSeconds@@ABV1@@Z @ 92 NONAME ; class TTimeIntervalMicroSeconds TBtraceTickCount::IntervalInMicroSeconds(class TBtraceTickCount const &) const
	?NewL@CBtraceKeyPress@@SAPAV1@AAVCBtraceReader@@@Z @ 93 NONAME ; class CBtraceKeyPress * CBtraceKeyPress::NewL(class CBtraceReader &)
	?NotifyPropertyChangedL@CBtracePubSub@@QAEXPAI0AAVMBtracePubSubObserver@@W4TBtraceNotificationPersistence@@@Z @ 94 NONAME ; void CBtracePubSub::NotifyPropertyChangedL(unsigned int *, unsigned int *, class MBtracePubSubObserver &, enum TBtraceNotificationPersistence)
	?Reset@CBtraceReader@@QAEXXZ @ 95 NONAME ; void CBtraceReader::Reset(void)
	?ThreadName@CBtraceContext@@QBEABVTDesC16@@ABVTBtraceThreadId@@@Z @ 96 NONAME ; class TDesC16 const & CBtraceContext::ThreadName(class TBtraceThreadId const &) const
	?WindowGroupName@CBtraceContext@@QBEABVTDesC16@@ABVTBtraceWindowGroupId@@@Z @ 97 NONAME ; class TDesC16 const & CBtraceContext::WindowGroupName(class TBtraceWindowGroupId const &) const
	??8TBtraceIdBase@@QBEHABV0@@Z @ 98 NONAME ; int TBtraceIdBase::operator==(class TBtraceIdBase const &) const
	?DecRef@CRefCountedObject@@QAEXXZ @ 99 NONAME ; void CRefCountedObject::DecRef(void)
	??1CBtraceAppResponse@@UAE@XZ @ 100 NONAME ; CBtraceAppResponse::~CBtraceAppResponse(void)
	?CurrentTickCount@CBtraceReader@@QBEABVTBtraceTickCount@@XZ @ 101 NONAME ; class TBtraceTickCount const & CBtraceReader::CurrentTickCount(void) const
	?NotifyAppResponseL@CBtraceAppResponse@@QAEXAAVMBtraceAppResponseObserver@@ABVTDesC16@@W4TBtraceNotificationPersistence@@@Z @ 102 NONAME ; void CBtraceAppResponse::NotifyAppResponseL(class MBtraceAppResponseObserver &, class TDesC16 const &, enum TBtraceNotificationPersistence)
	?NotifyContextSwitchL@CBtraceCpuUsage@@QAEXABVTBtraceThreadId@@AAVMBtraceCpuUsageObserver@@@Z @ 103 NONAME ; void CBtraceCpuUsage::NotifyContextSwitchL(class TBtraceThreadId const &, class MBtraceCpuUsageObserver &)
	??PTBtraceTickCount@@QBEHABV0@@Z @ 104 NONAME ; int TBtraceTickCount::operator>=(class TBtraceTickCount const &) const
	?CancelNotifyUnclassifiedData@CBtraceKeyPress@@QAEXAAVMBtraceKeyPressObserver@@@Z @ 105 NONAME ; void CBtraceKeyPress::CancelNotifyUnclassifiedData(class MBtraceKeyPressObserver &)
	?GetFullThreadName@CBtraceContext@@QBEXABVTBtraceThreadId@@AAVTDes16@@@Z @ 106 NONAME ; void CBtraceContext::GetFullThreadName(class TBtraceThreadId const &, class TDes16 &) const
	??NTBtraceTickCount@@QBEHABV0@@Z @ 107 NONAME ; int TBtraceTickCount::operator<=(class TBtraceTickCount const &) const
	?AddObserverL@CBtraceReader@@QAEXAAVMBtraceObserver@@@Z @ 108 NONAME ; void CBtraceReader::AddObserverL(class MBtraceObserver &)
	?CancelNotifyScreenUpdate@CBtraceScreenUpdate@@QAEXAAVMBtraceScreenUpdateObserver@@@Z @ 109 NONAME ; void CBtraceScreenUpdate::CancelNotifyScreenUpdate(class MBtraceScreenUpdateObserver &)
	?NewL@CBtraceFocusChange@@SAPAV1@AAVCBtraceReader@@AAVCBtraceContext@@@Z @ 110 NONAME ; class CBtraceFocusChange * CBtraceFocusChange::NewL(class CBtraceReader &, class CBtraceContext &)
	?NewL@CBtraceTextOnScreen@@SAPAV1@AAVCBtraceReader@@@Z @ 111 NONAME ; class CBtraceTextOnScreen * CBtraceTextOnScreen::NewL(class CBtraceReader &)
	??0TBtraceWindowGroupId@@QAE@ABV0@@Z @ 112 NONAME ; TBtraceWindowGroupId::TBtraceWindowGroupId(class TBtraceWindowGroupId const &)
	?NotifyCpuUsageL@CBtraceCpuUsage@@QAEXKVTTimeIntervalMicroSeconds32@@AAVMBtraceCpuUsageObserver@@@Z @ 113 NONAME ; void CBtraceCpuUsage::NotifyCpuUsageL(unsigned long, class TTimeIntervalMicroSeconds32, class MBtraceCpuUsageObserver &)
	?NotifyAppResponseL@CBtraceAppResponse@@QAEXAAVMBtraceAppResponseObserver@@ABVTDesC16@@@Z @ 114 NONAME ; void CBtraceAppResponse::NotifyAppResponseL(class MBtraceAppResponseObserver &, class TDesC16 const &)
	?ProcessName@CBtraceContext@@QBEABVTDesC16@@ABVTBtraceProcessId@@@Z @ 115 NONAME ; class TDesC16 const & CBtraceContext::ProcessName(class TBtraceProcessId const &) const
	?EnableCategoryL@CBtraceReader@@QAEXI@Z @ 116 NONAME ; void CBtraceReader::EnableCategoryL(unsigned int)
	?NotifyGenericEventL@CBtraceGeneric@@QAEXAAVMBtraceGenericObserver@@@Z @ 117 NONAME ; void CBtraceGeneric::NotifyGenericEventL(class MBtraceGenericObserver &)
	?NotifyThreadIdleL@CBtraceCpuUsage@@QAEXABVTBtraceThreadId@@ABVTBtraceTickCount@@VTTimeIntervalMicroSeconds32@@AAVMBtraceCpuUsageObserver@@W4TBtraceNotificationPersistence@@@Z @ 118 NONAME ; void CBtraceCpuUsage::NotifyThreadIdleL(class TBtraceThreadId const &, class TBtraceTickCount const &, class TTimeIntervalMicroSeconds32, class MBtraceCpuUsageObserver &, enum TBtraceNotificationPersistence)
	?HandleWindowGroupSeenL@MBtraceContextObserver@@UAEXABVTBtraceTickCount@@ABVTBtraceWindowGroupId@@I@Z @ 119 NONAME ; void MBtraceContextObserver::HandleWindowGroupSeenL(class TBtraceTickCount const &, class TBtraceWindowGroupId const &, unsigned int)
	??0TBtraceWindowGroupId@@QAE@XZ @ 120 NONAME ; TBtraceWindowGroupId::TBtraceWindowGroupId(void)
	?ThreadId@CBtraceContext@@QBE?AVTThreadId@@ABVTBtraceThreadId@@@Z @ 121 NONAME ; class TThreadId CBtraceContext::ThreadId(class TBtraceThreadId const &) const
	??0TBtraceTickCount@@QAE@XZ @ 122 NONAME ; TBtraceTickCount::TBtraceTickCount(void)
	?NotifyScreenUpdateL@CBtraceScreenUpdate@@QAEXHABVTRect@@AAVMBtraceScreenUpdateObserver@@@Z @ 123 NONAME ; void CBtraceScreenUpdate::NotifyScreenUpdateL(int, class TRect const &, class MBtraceScreenUpdateObserver &)
	??0TBtraceThreadId@@QAE@ABV0@@Z @ 124 NONAME ; TBtraceThreadId::TBtraceThreadId(class TBtraceThreadId const &)
	?NewL@CBtraceReader@@SAPAV1@ABVTDesC16@@PAVMBtraceLog@@@Z @ 125 NONAME ; class CBtraceReader * CBtraceReader::NewL(class TDesC16 const &, class MBtraceLog *)
	?NotifyThreadSeenL@CBtraceContext@@QAEXABVTDesC16@@AAVMBtraceContextObserver@@IW4TBtraceNotificationPersistence@@@Z @ 126 NONAME ; void CBtraceContext::NotifyThreadSeenL(class TDesC16 const &, class MBtraceContextObserver &, unsigned int, enum TBtraceNotificationPersistence)
	?NotifyUnclassifiedDataL@CBtraceKeyPress@@QAEXAAVMBtraceKeyPressObserver@@@Z @ 127 NONAME ; void CBtraceKeyPress::NotifyUnclassifiedDataL(class MBtraceKeyPressObserver &)
	?NotifyDomainEventL@CBtraceDomainEvent@@QAEXIIIAAVMBtraceDomainEventObserver@@W4TBtraceNotificationPersistence@@@Z @ 128 NONAME ; void CBtraceDomainEvent::NotifyDomainEventL(unsigned int, unsigned int, unsigned int, class MBtraceDomainEventObserver &, enum TBtraceNotificationPersistence)
	?IntervalInNanoTicks@TBtraceTickCount@@QBEKABV1@@Z @ 129 NONAME ; unsigned long TBtraceTickCount::IntervalInNanoTicks(class TBtraceTickCount const &) const
	??0TBtraceProcessId@@QAE@XZ @ 130 NONAME ; TBtraceProcessId::TBtraceProcessId(void)
	?NotifyCpuUsageL@CBtraceCpuUsage@@QAEXKVTTimeIntervalMicroSeconds32@@AAVMBtraceCpuUsageObserver@@W4TBtraceNotificationPersistence@@@Z @ 131 NONAME ; void CBtraceCpuUsage::NotifyCpuUsageL(unsigned long, class TTimeIntervalMicroSeconds32, class MBtraceCpuUsageObserver &, enum TBtraceNotificationPersistence)
	?RefCount@CRefCountedObject@@QBEHXZ @ 132 NONAME ; int CRefCountedObject::RefCount(void) const
	?DisableCategoryL@CBtraceReader@@QAEXI@Z @ 133 NONAME ; void CBtraceReader::DisableCategoryL(unsigned int)
	?FindWindowGroupsL@CBtraceContext@@QBEXABVTDesC16@@AAV?$RArray@VTBtraceWindowGroupId@@@@@Z @ 134 NONAME ; void CBtraceContext::FindWindowGroupsL(class TDesC16 const &, class RArray<class TBtraceWindowGroupId> &) const
	?HandleThreadGoneL@MBtraceContextObserver@@UAEXABVTBtraceTickCount@@ABVTBtraceThreadId@@I@Z @ 135 NONAME ; void MBtraceContextObserver::HandleThreadGoneL(class TBtraceTickCount const &, class TBtraceThreadId const &, unsigned int)
	?NotifyPointerEventL@CBtraceKeyPress@@QAEXAAVMBtraceKeyPressObserver@@@Z @ 136 NONAME ; void CBtraceKeyPress::NotifyPointerEventL(class MBtraceKeyPressObserver &)
	?CancelNotifyThreadSeen@CBtraceContext@@QAEXAAVMBtraceContextObserver@@@Z @ 137 NONAME ; void CBtraceContext::CancelNotifyThreadSeen(class MBtraceContextObserver &)
	??MTBtraceTickCount@@QBEHABV0@@Z @ 138 NONAME ; int TBtraceTickCount::operator<(class TBtraceTickCount const &) const
	?NotifyThreadSeenL@CBtraceContext@@QAEXABVTDesC16@@AAVMBtraceContextObserver@@I@Z @ 139 NONAME ; void CBtraceContext::NotifyThreadSeenL(class TDesC16 const &, class MBtraceContextObserver &, unsigned int)
	?CancelNotifyRawKeyEvent@CBtraceKeyPress@@QAEXAAVMBtraceKeyPressObserver@@@Z @ 140 NONAME ; void CBtraceKeyPress::CancelNotifyRawKeyEvent(class MBtraceKeyPressObserver &)
	?CancelNotifyThreadIdle@CBtraceCpuUsage@@QAEXAAVMBtraceCpuUsageObserver@@@Z @ 141 NONAME ; void CBtraceCpuUsage::CancelNotifyThreadIdle(class MBtraceCpuUsageObserver &)
	??1CBtraceReader@@UAE@XZ @ 142 NONAME ; CBtraceReader::~CBtraceReader(void)
	?NotifyWindowGroupSeenByThreadNameL@CBtraceContext@@QAEXABVTDesC16@@AAVMBtraceContextObserver@@IW4TBtraceNotificationPersistence@@@Z @ 143 NONAME ; void CBtraceContext::NotifyWindowGroupSeenByThreadNameL(class TDesC16 const &, class MBtraceContextObserver &, unsigned int, enum TBtraceNotificationPersistence)
	?NewL@CBtraceCpuUsage@@SAPAV1@AAVCBtraceReader@@AAVCBtraceContext@@@Z @ 144 NONAME ; class CBtraceCpuUsage * CBtraceCpuUsage::NewL(class CBtraceReader &, class CBtraceContext &)
	?Set@TBtraceIdBase@@QAEXI@Z @ 145 NONAME ; void TBtraceIdBase::Set(unsigned int)
	?DisableBtrace@CBtraceReader@@QAEXXZ @ 146 NONAME ; void CBtraceReader::DisableBtrace(void)
	?NotifyDomainEventL@CBtraceDomainEvent@@QAEXIAAVMBtraceDomainEventObserver@@W4TBtraceNotificationPersistence@@@Z @ 147 NONAME ; void CBtraceDomainEvent::NotifyDomainEventL(unsigned int, class MBtraceDomainEventObserver &, enum TBtraceNotificationPersistence)
	??0TBtraceIdBase@@IAE@I@Z @ 148 NONAME ; TBtraceIdBase::TBtraceIdBase(unsigned int)
	??1CBtraceKeyPress@@UAE@XZ @ 149 NONAME ; CBtraceKeyPress::~CBtraceKeyPress(void)
	?NotifyFocusChangedL@CBtraceFocusChange@@QAEXABVTDesC16@@AAVMBtraceFocusChangeObserver@@@Z @ 150 NONAME ; void CBtraceFocusChange::NotifyFocusChangedL(class TDesC16 const &, class MBtraceFocusChangeObserver &)
	?SetMultipartReassemblyL@CBtraceReader@@QAEXH@Z @ 151 NONAME ; void CBtraceReader::SetMultipartReassemblyL(int)
	?MicroSecondsToNanoTicks@TBtraceUtils@@SAKVTTimeIntervalMicroSeconds32@@@Z @ 152 NONAME ; unsigned long TBtraceUtils::MicroSecondsToNanoTicks(class TTimeIntervalMicroSeconds32)
	?Start@CBtraceReader@@QAEXABVTBtraceTickCount@@VTTimeIntervalMicroSeconds32@@@Z @ 153 NONAME ; void CBtraceReader::Start(class TBtraceTickCount const &, class TTimeIntervalMicroSeconds32)
	??1CBtraceAppStart@@UAE@XZ @ 154 NONAME ; CBtraceAppStart::~CBtraceAppStart(void)
	?CancelNotifyAppStart@CBtraceAppStart@@QAEXAAVMBtraceAppStartObserver@@@Z @ 155 NONAME ; void CBtraceAppStart::CancelNotifyAppStart(class MBtraceAppStartObserver &)
	?NewL@CBtraceAppStart@@SAPAV1@AAVCBtraceReader@@AAVCBtraceContext@@@Z @ 156 NONAME ; class CBtraceAppStart * CBtraceAppStart::NewL(class CBtraceReader &, class CBtraceContext &)
	?NotifyAppStartL@CBtraceAppStart@@QAEXAAVMBtraceAppStartObserver@@ABVTDesC16@@@Z @ 157 NONAME ; void CBtraceAppStart::NotifyAppStartL(class MBtraceAppStartObserver &, class TDesC16 const &)
	?NotifyAppStartL@CBtraceAppStart@@QAEXAAVMBtraceAppStartObserver@@ABVTDesC16@@W4TBtraceNotificationPersistence@@@Z @ 158 NONAME ; void CBtraceAppStart::NotifyAppStartL(class MBtraceAppStartObserver &, class TDesC16 const &, enum TBtraceNotificationPersistence)

